\ str.ok - string processing words
\ Copyright (C) 2018 Wolfgang Jaehrling
\
\ ISC License
\
\ Permission to use, copy, modify, and/or distribute this software for any
\ purpose with or without fee is hereby granted, provided that the above
\ copyright notice and this permission notice appear in all copies.
\
\ THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
\ WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
\ MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
\ ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
\ WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
\ ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
\ OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

private{
: cs@=?   [2dup c@ swap c@ =];
: next-cs [1+ swap 1+ swap];
: -end?   [2dup c@ 0= swap c@ 0= or not];
: result  [nip c@ 0=];
}in{
: str-at  [cell+] begin [-end? >aux cs@=? aux> and] while [next-cs] repeat [result];
: str-at? [over swap str-at];
}

private{
  : -end^         [0 =?] if [drop rdrop] then ;
}in{
: whitespace      [13 =? >aux  10 =? >aux  bl =? >aux  9 =  aux> aux> aux> or or or];
: whitespace?     [dup whitespace];
: skip-whitespace begin [dup c@ -end^ whitespace] while [1+] repeat ;
: skip-bl         begin [dup c@ -end^ bl =]       while [1+] repeat ;
: find-bl         begin [dup c@ -end^ bl <>]      while [1+] repeat ;
}

private{
  : #-0s [dup c@ 0=] if [drop 0 exit] then [1+ #-0s 1+];
}in{
  : #str [dup @ cells tuck + #-0s + cell-];
}
: cdata [dup cell+ swap #str over +];
