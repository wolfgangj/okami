\ tty.ok - terminal control
\ Copyright (C) 2018 Wolfgang Jaehrling
\
\ ISC License
\
\ Permission to use, copy, modify, and/or distribute this software for any
\ purpose with or without fee is hereby granted, provided that the above
\ copyright notice and this permission notice appear in all copies.
\
\ THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
\ WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
\ MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
\ ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
\ WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
\ ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
\ OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

\ requires lib/os/io.ok

private{
  struct{
       2 field: row
       2 field: col
    cell field: (unused)
  } winsize:

  winsize: ws

  struct{
    cell field: iflag
    cell field: oflag
    cell field: cflag
    cell field: lflag
       1 field: line
      19 field: cc
  } termios:

  termios: termios

  : -flag: [: with [not ,] does [@ termios] dup , [@ and termios] , [!];];
  : +flag: [: with [,]     does [@ termios] dup , [@ or  termios] , [!];];

  \ iflag:
  ' iflag dup   -flag:  -iflag:   +flag: +iflag:
  1 dup         -iflag: -ignbrk  +iflag: +ignbrk
  2 dup         -iflag: -brkint  +iflag: +brkint

  \ lflag:
  ' lflag dup   -flag:  -lflag:  +flag:  +lflag:
  1 dup         -lflag: -isig    +lflag: +isig
  2 dup         -lflag: -icanon  +lflag: +icanon
  8 dup         -lflag: -echo    +lflag: +echo

  0 const: tty-fd

  : tcgets  [termios 21505 tty-fd ioctl3(syscall)];
  : tcsetsw [termios 21507 tty-fd ioctl3(syscall)];

  : (+raw) [-icanon -echo -isig -ignbrk -brkint];
  : (-raw) [+icanon +echo +isig +ignbrk +brkint];

}in{
: tiocgwinsz [ws 21523 tty-fd ioctl3(syscall) 0=?] if [>aux ws row c@   ws col c@ aux>] then ;
: +raw       [tcgets 0=] if [(+raw) tcsetsw] then ;
: -raw       [tcgets 0=] if [(-raw) tcsetsw] then ;
}

private{

emitter: sep ;
: esc   [27 emit];
: bel   [7 emit];
: ctrl( [esc] {char} [ [emit];
: )ctrl {char} m [emit];

var: alt \ on alternative screen?

}in{

: normal [ctrl( 0 n. )ctrl];

0 const: black
1 const: red
2 const: green
3 const: yellow
4 const: blue
5 const: magenta
6 const: cyan
7 const: white

: bright [60 +];
: fg     [ctrl( 30 + n. )ctrl];
: bg     [ctrl( 40 + n. )ctrl];

: color     [ctrl( 38 n. sep 5 n. sep n. )ctrl];
: bg-color  [ctrl( 48 n. sep 5 n. sep n. )ctrl];
: rgb       [ctrl( 38 n. sep 2 n. sep >aux swap n. sep n. sep aux> n. )ctrl];
: bg-rgb    [ctrl( 48 n. sep 2 n. sep >aux swap n. sep n. sep aux> n. )ctrl];

: up     [ctrl( n.] {char} A [emit];
: down   [ctrl( n.] {char} B [emit];
: right  [ctrl( n.] {char} C [emit];
: left   [ctrl( n.] {char} D [emit];
: at-xy  [ctrl( n. sep n.] {char} H [emit];

: title    [esc] {char} ] [emit 0 n. sep str. bel];
: ttyreset [esc] {char} c [emit];
: ttyclear [ctrl( 2 n.] {char} J [emit];

: +cursor [ctrl(] {char} ? [emit 25 n.] {char} h [emit];
: -cursor [ctrl(] {char} ? [emit 25 n.] {char} l [emit];

: altscreen [ctrl(] {char} ? [emit 1049 n. alt @] if {char} l else {char} h then [emit alt toggle];

}

str' "okami" title
